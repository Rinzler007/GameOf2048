{"ast":null,"code":"var _jsxFileName = \"/Users/harshdas/Desktop/gameof2048/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Cell from './Cell';\nimport Tile from './Tile';\nimport { Board } from '../helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoardView = () => {\n  _s();\n\n  const [board, setBoard] = useState(new Board());\n  const cells = board.cells.map((row, rowIndex) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row.map((col, colIndex) => {\n        return /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  });\n  const tiles = board.tiles.filter(tile => tile.value !== 0).map((tile, index) => {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      tile: tile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [cells, tiles]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BoardView, \"fJeeskUvlK1/tMelSSXfsMxPe5M=\");\n\n_c = BoardView;\nexport default BoardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardView\");","map":{"version":3,"names":["React","useState","Cell","Tile","Board","BoardView","board","setBoard","cells","map","row","rowIndex","col","colIndex","tiles","filter","tile","value","index"],"sources":["/Users/harshdas/Desktop/gameof2048/src/components/Board.js"],"sourcesContent":["import React,{ useState } from 'react'\nimport Cell from './Cell'\nimport Tile from './Tile'\nimport { Board } from '../helper'\n\nconst BoardView = () => {\n    const [board,setBoard]=useState(new Board())\n    const cells = board.cells.map((row,rowIndex)=>{\n        return(\n            <div>\n                {row.map((col,colIndex)=>{\n                    return <Cell/>\n                })}\n            </div>\n        )\n    })\n    const tiles = board.tiles.filter((tile)=>tile.value !== 0).map((tile,index)=>{\n        return(\n            <Tile tile={tile}/>\n        )\n    })\n  return (\n    <div>{cells}{tiles}</div>\n  )\n}\nexport default BoardView"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,KAAT,QAAsB,WAAtB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBN,QAAQ,CAAC,IAAIG,KAAJ,EAAD,CAA/B;EACA,MAAMI,KAAK,GAAGF,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,CAACC,GAAD,EAAKC,QAAL,KAAgB;IAC1C,oBACI;MAAA,UACKD,GAAG,CAACD,GAAJ,CAAQ,CAACG,GAAD,EAAKC,QAAL,KAAgB;QACrB,oBAAO,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFA;IADL;MAAA;MAAA;MAAA;IAAA,QADJ;EAOH,CARa,CAAd;EASA,MAAMC,KAAK,GAAGR,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAQA,IAAI,CAACC,KAAL,KAAe,CAA1C,EAA6CR,GAA7C,CAAiD,CAACO,IAAD,EAAME,KAAN,KAAc;IACzE,oBACI,QAAC,IAAD;MAAM,IAAI,EAAEF;IAAZ;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH,CAJa,CAAd;EAKF,oBACE;IAAA,WAAMR,KAAN,EAAaM,KAAb;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAnBD;;GAAMT,S;;KAAAA,S;AAoBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}